(00)
00E0 - CLRS - DISPLAY = {0}
A22A - ANNN - I = $22A (i.e. INSTRUCTION $2A)
600C - 6XNN - V0 = $0C
6108 - 6XNN - V1 = $08
D01F - DXYN - DRAW SPRITE 8xF (START READ AT I == $22A) AT LOCATION (V0 == $0C, V1 == $08)
7009 - 7XNN - V0 += $09 (V0 == $15)
A239 - ANNN - I = $239 (i.e. INSTRUCTION $39)
D01F - DXYN - DRAW SPRITE 8xF (START READ AT I == $239) AT LOCATION (V0 == $15, V1 == $08)

(10)
A248 - ANNN - I = $248 (i.e. INSTRUCTION $48)
7008 - 7XNN - V0 += $08 (V0 == $1D)
D01F - DXYN - DRAW SPRITE 8xF (START READ AT I == $239) AT LOCATION (V0 == $1d, V1 == $08)
7004 - 7XNN - V0 += $04 (V0 == $21)
A257 - ANNN - I = $257 (i.e. INSTRUCTION $57)
D01F - DXYN - DRAW SPRITE 8xF (START READ AT I == $257) AT LOCATION (V0 == $21, V1 == $08)
7008 - 7XNN - V0 += $08 (V0 == $29)
A266 - ANNN - I = $266 (i.e. INSTRUCTION $66)

(20)
D01F - DXYN - DRAW SPRITE 8xF (START READ AT I == $266) AT LOCATION (V0 == $29, V1 == $08)
7008 - 7XNN - V0 += $08 (V0 == $31)
A275 - ANNN - I = $275 (i.e. INSTRUCTION $75)
D01F - DXYN - DRAW SPRITE 8xF (START READ AT I == $275) AT LOCATION (V0 == $31, V1 == $08)
1228 - 1NNN - JUMP TO ADDRESS $228 (i.e. INSTRUCTION 28) - INFINITE LOOP!!! (i.e. END OF PROGRAM)
FF00 - DATA (POINTED AT INSTRUCTION $02; USED BY DRAWING INSTRUCCTION $08)
FF00 - DATA
3C00 - DATA (COULD BE "3XNN" - SKIP NEXT IF VX EQUALS CONSTANT NN - BUT NOT IN THIS CASE)

(30)
3C00 - DATA
3C00 - DATA
3C00 - DATA
FF00 - DATA
FFFF - DATA (2nd NIBBLE - POINTED AT INSTRUCTION $0C; USED BY DRAWING INSTRUCCTION $0E)
00FF - DATA (COULD BE "0NNN" - CALL MACHINE CODE AT ADDRESS NNN - BUT NOT IN THIS CASE)
0038 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
003F - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)

(40)
003F - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
0038 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
00FF - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
00FF - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
8000 - DATA (COULD BE "8XY0" - SET VX TO VY - BUT NOT IN THIS CASE) - POINTED AT INSTRUCTION $10; USED BY DRAWING INSTRUCCTION $14)
E000 - DATA
E000 - DATA
8000 - DATA (COULD BE "8XY0" BUT NOT IN THIS CASE)

(50)
8000 - DATA (COULD BE "8XY0" BUT NOT IN THIS CASE)
E000 - DATA
E000 - DATA
80F8 - DATA (2nd NIBBLE - POINTED AT INSTRUCTION $18; USED BY DRAWING INSTRUCCTION $1A)
00FC - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
003E - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
003F - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
003B - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)

(60)
0039 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
00F8 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
00F8 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
0300 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE) - POINTED AT INSTRUCTION $1E; USED BY DRAWING INSTRUCCTION $20)
0700 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
0F00 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
BF00 - DATA (COULD BE "BNNN" - JUMP TO ADDRESS NNN PLUS V0 - BUT NOT IN THIS CASE)
FB00 - DATA

(70)
F300 - DATA
E300 - DATA
43E0 - DATA (COULD BE "4XNN" - SKIP NEXT IF VX NOT-EQUALS CONSTANT NN - BUT NOT IN THIS CASE) - 2nd NIBBLE - POINTED AT INSTRUCTION $24; USED BY DRAWING INSTRUCCTION $26)
00E0 - DATA (COULD BE "CLRS" BUT NOT IN THIS CASE)
0080 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
0080 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
0080 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)
0080 - DATA (COULD BE "0NNN" BUT NOT IN THIS CASE)

(80)
00E0 - DATA (COULD BE "CLRS" BUT NOT IN THIS CASE)
00E0 - DATA (COULD BE "CLRS" BUT NOT IN THIS CASE)

***　KNOWN INSTRUCTIONS

CLRS - CLEAR SCREEN
1NNN - JUMP TO ADDRESS NNN
6XNN - SET VX TO CONSTANT NN
7XNN - ADD CONSTANT NN TO VX
ANNN - SET I TO ADDRESS NNN
DXYN - DRAW SPRITE 8xN (START READ AT I) AT LOCATION (VX,VY)

***　MISSLEADING AMD UNKNOWN INSTRUCTIONS

Some opcodes can be misinterpreted as unknown instructions or as certain known instructions.
In reality, they are simply data that, in this case, are used to represent the sprites to be rendered.
This can be seen simply by following the program sequence.

0NNN
3XNN
4XNN
8XY0
BNNN
